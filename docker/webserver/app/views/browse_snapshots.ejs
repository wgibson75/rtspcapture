<html>
  <head>
    <title>Browse Snapshots</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link href="/css/browse_snapshots.css" rel="stylesheet" />
    <link href="jquery-ui-1-13-2.css" rel="stylesheet">
    <script src="jquery-3.7.1.min.js"></script>
    <script src="jquery-ui-1-13-2.min.js"></script>
    <script src="/scripts/browse_snapshots.js"></script>
  </head>
  <script>

  const SNAPSHOTS_DIR = '<%= snapshots_dir %>';
  const JSON_SUMMARY_FILE = `${SNAPSHOTS_DIR}/snapshots.json`;
  const MARGIN_CONTROL_TOP_PCT = 80;
  const MARGIN_CONTROL_NON_IPHONE_TOP_DELTA = 15;
  const MARGIN_CONTROL_LANDSCAPE_IPHONE_TOP_DELTA = 6;

  var SNAPSHOTS = null; // Set to the Snapshots object for loading and showing snapshots
  var CONTROL   = null; // Set to the Control object for controlling snapshots

  // Doesn't work for iPad unfortunately i.e. iPad reported as Mac (clearly a bug!)
  const IS_IPHONE = (/iPhone/.test(navigator.userAgent)) ? true : false;

  function isIphonePortrait() {
    return (IS_IPHONE && (screen.orientation.type == "portrait-primary"));
  }

  function positionControl() {
    let top = isIphonePortrait() ? MARGIN_CONTROL_TOP_PCT : MARGIN_CONTROL_TOP_PCT - 10;
    let left = ($(window).width() - $("#control").width()) / 2;

    if (!IS_IPHONE) {
      top += MARGIN_CONTROL_NON_IPHONE_TOP_DELTA;
    }

    if (IS_IPHONE && !isIphonePortrait()) {
      top += MARGIN_CONTROL_LANDSCAPE_IPHONE_TOP_DELTA;
    }

    $("#control").css("top", `${top}%`);
    $("#control").css("left", `${left}`);
  }

  $(document).ready(function () {
    // Make the control draggable on supported devices
    $(function() {
      $('#control').draggable();
    });

    positionControl();

    // IDs of snapshot elements
    let snapshotElements = {
      mainId : "main",
      timeId : "time"
    };

    SNAPSHOTS = new Snapshots(JSON_SUMMARY_FILE, snapshotElements);

    // IDs of control elements
    let controlElements = {
      controlId : "control",
      homeId    : "home",
      filterId  : "filter",
      prevId    : "prev",
      nextId    : "next"
    }

    CONTROL = new Control(SNAPSHOTS, controlElements);
  });

  $(window).bind("orientationchange", function() {
    positionControl();
  });

  $(window).bind("resize", function() {
    positionControl();
  });

  function keydownHandler(e) {
    if (e.code == 'ArrowLeft') {
      prevSnapshot();
    }
    else if ((e.code == 'ArrowRight') || (e.code == 'Space')) {
      nextSnapshot();
    }
  }

  function init() {
    document.onkeydown = keydownHandler;
  }

  ////
  // Button click handlers
  ////////
  function home(button)         { CONTROL.home(button);         }
  function prevSnapshot(button) { CONTROL.prevSnapshot(button); }
  function nextSnapshot(button) { CONTROL.nextSnapshot(button); }

  </script>
    <body onload="init()" bgcolor="black">
      <div class="holder">
        <div id="main">
        </div>
        <div id="control">
          <div class="time" id="time"></div>
          <div class="button-group">
            <div class="button" id="home" onclick="home(this)">Home</div>
            <div class="button" id="filter"></div>
            <div class="button" id="prev" onclick="prevSnapshot(this)">&lt;&lt;</div>
            <div class="button" id="next" onclick="nextSnapshot(this)">&gt;&gt;</div>
          </div>
        </div>
     </div>
  </body>
</html>